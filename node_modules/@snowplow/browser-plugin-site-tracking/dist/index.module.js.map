{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["/*\n * Copyright (c) 2021 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { BrowserPlugin, BrowserTracker, dispatchToTrackersInCollection } from '@snowplow/browser-tracker-core';\nimport {\n  buildSelfDescribingEvent,\n  buildSiteSearch,\n  buildSocialInteraction,\n  CommonEventProperties,\n  SiteSearchEvent,\n  SocialInteractionEvent,\n} from '@snowplow/tracker-core';\n\nexport { SocialInteractionEvent, SiteSearchEvent };\n\nconst _trackers: Record<string, BrowserTracker> = {};\n\nexport function SiteTrackingPlugin(): BrowserPlugin {\n  return {\n    activateBrowserPlugin: (tracker) => {\n      _trackers[tracker.id] = tracker;\n    },\n  };\n}\n\n/**\n * Track a social interaction event\n *\n * @param event - The event information\n * @param trackers - The tracker identifiers which the event will be sent to\n */\nexport function trackSocialInteraction(\n  event: SocialInteractionEvent & CommonEventProperties,\n  trackers: Array<string> = Object.keys(_trackers)\n) {\n  dispatchToTrackersInCollection(trackers, _trackers, (t) => {\n    t.core.track(buildSocialInteraction(event), event.context, event.timestamp);\n  });\n}\n\n/**\n * Track an internal search event\n *\n * @param event - The event information\n * @param trackers - The tracker identifiers which the event will be sent to\n */\nexport function trackSiteSearch(\n  event: SiteSearchEvent & CommonEventProperties,\n  trackers: Array<string> = Object.keys(_trackers)\n) {\n  dispatchToTrackersInCollection(trackers, _trackers, (t) => {\n    t.core.track(buildSiteSearch(event), event.context, event.timestamp);\n  });\n}\n\n/** A Timing Event */\nexport interface TimingEvent {\n  /** Category of the timing event */\n  category: string;\n  /** The variable being timed */\n  variable: string;\n  /** The timing result */\n  timing: number;\n  /** An additional label */\n  label?: string;\n}\n\n/**\n * Track a timing event (such as the time taken for a resource to load)\n *\n * @param event - The event information\n * @param trackers - The tracker identifiers which the event will be sent to\n */\nexport function trackTiming(\n  event: TimingEvent & CommonEventProperties,\n  trackers: Array<string> = Object.keys(_trackers)\n) {\n  const { category, variable, timing, label, context, timestamp } = event;\n  dispatchToTrackersInCollection(trackers, _trackers, (t) => {\n    t.core.track(\n      buildSelfDescribingEvent({\n        event: {\n          schema: 'iglu:com.snowplowanalytics.snowplow/timing/jsonschema/1-0-0',\n          data: {\n            category,\n            variable,\n            timing,\n            label,\n          },\n        },\n      }),\n      context,\n      timestamp\n    );\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAM,SAAS,GAAmC,EAAE,CAAC;SAErC,kBAAkB;IAChC,OAAO;QACL,qBAAqB,EAAE,UAAC,OAAO;YAC7B,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;SACjC;KACF,CAAC;AACJ,CAAC;AAED;;;;;;SAMgB,sBAAsB,CACpC,KAAqD,EACrD,QAAgD;IAAhD,yBAAA,EAAA,WAA0B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAEhD,8BAA8B,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAC,CAAC;QACpD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;KAC7E,CAAC,CAAC;AACL,CAAC;AAED;;;;;;SAMgB,eAAe,CAC7B,KAA8C,EAC9C,QAAgD;IAAhD,yBAAA,EAAA,WAA0B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAEhD,8BAA8B,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAC,CAAC;QACpD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;KACtE,CAAC,CAAC;AACL,CAAC;AAcD;;;;;;SAMgB,WAAW,CACzB,KAA0C,EAC1C,QAAgD;IAAhD,yBAAA,EAAA,WAA0B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAExC,IAAA,QAAQ,GAAkD,KAAK,SAAvD,EAAE,QAAQ,GAAwC,KAAK,SAA7C,EAAE,MAAM,GAAgC,KAAK,OAArC,EAAE,KAAK,GAAyB,KAAK,MAA9B,EAAE,OAAO,GAAgB,KAAK,QAArB,EAAE,SAAS,GAAK,KAAK,UAAV,CAAW;IACxE,8BAA8B,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAC,CAAC;QACpD,CAAC,CAAC,IAAI,CAAC,KAAK,CACV,wBAAwB,CAAC;YACvB,KAAK,EAAE;gBACL,MAAM,EAAE,6DAA6D;gBACrE,IAAI,EAAE;oBACJ,QAAQ,UAAA;oBACR,QAAQ,UAAA;oBACR,MAAM,QAAA;oBACN,KAAK,OAAA;iBACN;aACF;SACF,CAAC,EACF,OAAO,EACP,SAAS,CACV,CAAC;KACH,CAAC,CAAC;AACL;;"}